version: '3.8'

services:
  website:
    build:
      context: ./custombld_website
      dockerfile: Dockerfile
    ports:
      - 8080:80
    depends_on:
      - server
    networks:
      - custombld-network
    restart: ${RESTART_POLICY:-always}
    env_file:
      - .env.prd

  server:
    build:
      context: ./custombld_server
      dockerfile: Dockerfile
    ports:
      - "${SERVER_PORT:-5000}:5000"
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - FLASK_ENV=${FLASK_ENV:-development}
    depends_on:
      - db
    volumes:
      - ./custombld_db/stats_cache.json:/app/db_stats_cache.json
      - ./custombld_db:/app/db
    networks:
      - custombld-network
    restart: ${RESTART_POLICY:-always}
    env_file:
      - .env.prd

  db:
    build:
      context: ./custombld_db
      dockerfile: Dockerfile
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT_EXTERNAL:-127.0.0.1:5434}:5432"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - custombld-network
    command: >
      postgres -c checkpoint_timeout=10min
               -c checkpoint_completion_target=0.9
               -c max_wal_size=8GB
    restart: ${RESTART_POLICY:-always}
    env_file:
      - .env.prd
               
networks:
  custombld-network:
    driver: bridge

volumes:
  postgres_data: 